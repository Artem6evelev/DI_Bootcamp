{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Daily Challenge\
\
-- 1. Create a table orders and a table items. \
-- You decide which fields should be \
-- in each table, but each item should have a price.\
\
-- 2. There is a relationship of one to many \
-- between the orders and the table items\
\
create table orders (\
	item_id int ,\
	order_id int not null,\
	user_id int not null,\
	CONSTRAINT fk_items\
	foreign key (item_id)\
	references items(item_id) \
) \
\
drop table orders\
\
insert into orders(order_id, item_id, user_id)\
	values \
	(1001, 1, 5),\
	(1001, 2, 5),\
	(1001, 1, 5),\
	(1002, 1, 10),\
	(1002, 1, 10),\
	(1002, 1, 10)\
\
\
\
create table items (\
	item_name varchar(50),\
	item_id int primary key,\
	item_price int not null\
)\
insert into items(item_name, item_id, item_price)\
	values \
	('table', 1, 1000),\
	('chair', 2, 200)\
\
	\
-- 3. Create a function that returns \
-- the total price for a given order\
\
SELECT sum (item_price) from orders\
	INNER JOIN items\
	on orders.item_id = items.item_id\
	where order_id = 1001 and user_id = 5\
	\
	\
create or replace function total_price(myOrder int)\
	returns int\
	language plpgsql\
	as\
	$$\
	declare\
	total_price integer;\
	begin\
	SELECT sum (item_price) into total_price from orders\
	INNER JOIN items\
	on orders.item_id = items.item_id\
	where order_id = myOrder;\
	\
	return total_price;\
	end;\
	$$\
	\
	SELECT total_price(1002)\
	}